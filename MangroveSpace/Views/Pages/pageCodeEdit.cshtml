@model AspCMSPage
@{
    ViewBag.Title = "Code Edit";
    Layout = "~/Views/Shared/backend/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12">
        <div class="page-title">
            <div class="row">
                <div class="col-md-6">
                    <h3>@ViewBag.Title</h3>
                </div>
                <div class="col-md-6 text-right">
                    <a href="/pages/" class="btn btn-success">Manage Page</a>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">


    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_content">
                <br />
                @using (Html.BeginForm("Edit", "Pages", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ID)
                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PageBody, htmlAttributes: new { @class = "control-label col-md-12 col-sm-12 col-xs-12", style = "margin-bottom:10px" })
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @*<div id="page-editor"></div>*@
                                    <div class="code-container">
                                        @Html.TextAreaFor(model => model.PageBody)
                                        @Html.ValidationMessageFor(m => m.PageBody)
                                    </div>
                                    <a class="btn btn-info pull-right btn-xs" style="margin-top:5px;margin-right:0" href="javascript:autoFormatSelection()">
                                        <i class="fa fa-check"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PageTitle, htmlAttributes: new { @class = "control-label col-md-12 col-sm-12 col-xs-12", style = "margin-bottom:10px" })
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @Html.EditorFor(model => model.PageTitle, new { htmlAttributes = new { @class = "form-control", } })
                                    @Html.ValidationMessageFor(m => m.PageTitle)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-12 col-sm-12 col-xs-12" style="margin-bottom:10px">Page Category</label>
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @*@Html.EditorFor(model => model.AspInfoSection.SectionShift, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <select class="js-example-basic-single form-control" name="CategoryID" data-placeholder="Select an item">
                                        <option value="">&nbsp;</option>
                                        @{ foreach (var item in ViewBag.CategoryList)
                                            {
                                                if (item.id == Model.CategoryID)
                                                {
                                                    <option value="@item.id" selected="selected">@item.value</option>
                                                }
                                                else
                                                {
                                                    <option value="@item.id">@item.value</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-12 col-sm-12 col-xs-12" style="margin-bottom:10px">Page Template</label>
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @*@Html.EditorFor(model => model.AspInfoSection.SectionShift, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <select class="js-example-basic-single form-control" name="PageTamplateID" data-placeholder="Select an item">
                                        <option value="">&nbsp;</option>
                                        @{ foreach (var item in ViewBag.TemplateList)
                                            {
                                                if (item.id == Model.PageTamplateID)
                                                {
                                                    <option value="@item.id" selected="selected">@item.value</option>
                                                }
                                                else
                                                {
                                                    <option value="@item.id">@item.value</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-12 col-sm-12 col-xs-12" style="margin-bottom:10px">Language</label>
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @*@Html.EditorFor(model => model.AspInfoSection.SectionShift, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <select class="js-example-basic-single form-control" name="PageLanguage" data-placeholder="Select an item">
                                        <option value="EN">English</option>
                                        <option value="BN">Bangla</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-12 col-sm-12 col-xs-12" style="margin-bottom:10px">Tags</label>
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <textarea name="TAG" id="textarea2" class="form-control" rows="3" placeholder=""></textarea>
                                    @Html.ValidationMessageFor(model => model.TAG, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="ln_solid"></div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-12 text-center col-sm-12 col-xs-12 ">
                                    <a href="/pages/" class="btn btn-primary" type="button">Cancel</a>
                                    <button type="submit" class="btn btn-success">Submit</button>

                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>





@Scripts.Render("~/bundles/jqueryval")

@section Scripts {




    <script>


        var editor = CodeMirror.fromTextArea(document.getElementById("PageBody"), {
            lineNumbers: true,
            mode: "htmlmixed"
        });
        CodeMirror.commands["selectAll"](editor);

        function getSelectedRange() {
            return { from: editor.getCursor(true), to: editor.getCursor(false) };
        }

        function autoFormatSelection() {
            var range = getSelectedRange();
            editor.autoFormatRange(range.from, range.to);
        }

        function commentSelection(isComment) {
            var range = getSelectedRange();
            editor.commentRange(isComment, range.from, range.to);
        }


    </script>

}

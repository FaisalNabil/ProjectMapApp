@model MangroveSpace.AspCMSGadget

@{
    ViewBag.Title = "Create Gadget";
    Layout = "~/Views/Shared/backend/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-12">
        <div class="page-title">
            <div class="row">
                <div class="col-md-6">
                    <h3>@ViewBag.Title</h3>
                </div>
                <div class="col-md-6 text-right">
                    <a href="/gadgets/" class="btn btn-success">Manage Gadget</a>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_content">
                <br />
                @using (Html.BeginForm("Create", "gadgets", null, FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
                {
                    @Html.AntiForgeryToken()
                    if (TempData["msg"] != null)
                    {
                        <div style="text-align:center;font-size:16px;color:red;">
                            <span>@TempData["msg"]</span>
                        </div>

                    }

                    <div class="row">
                        <div class="col-md-9">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GadgetHTML, htmlAttributes: new { @class = "control-label col-md-12 col-sm-12 col-xs-12", style = "margin-bottom:10px" })
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    <div class="code-container">
                                        @Html.TextBoxFor(model => model.GadgetHTML)
                                        @Html.ValidationMessageFor(m => m.GadgetHTML)
                                    </div>
                                    <a class="btn btn-info pull-right btn-xs" style="margin-top:5px;margin-right:0" href="javascript:autoFormatSelection()">
                                        <i class="fa fa-check"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GadgetID, htmlAttributes: new { @class = "control-label col-md-12 col-sm-12 col-xs-12", style = "margin-bottom:10px" })
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @Html.TextBoxFor(model => model.GadgetID, htmlAttributes: new { @class = "form-control", Value = Model.GadgetID, @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.GadgetID)
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.GadgetName, htmlAttributes: new { @class = "control-label col-md-12 col-sm-12 col-xs-12", style = "margin-bottom:10px" })
                                <div class="col-md-12 col-sm-12 col-xs-12">
                                    @Html.TextBoxFor(model => model.GadgetName, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.GadgetName)
                                </div>
                            </div>



                        </div>

                    </div>


                    <div class="ln_solid"></div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-12 text-center col-sm-12 col-xs-12 ">
                                    <a href="/gadgets/" class="btn btn-primary" type="button">Cancel</a>
                                    <button type="submit" class="btn btn-success">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- /page content -->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")




    <script>
        //Image Preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('.blah')
                        .attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    <script>
        var editor = CodeMirror.fromTextArea(document.getElementById("GadgetHTML"), {
            lineNumbers: true,
            mode: "htmlmixed"
        });
        CodeMirror.commands["selectAll"](editor);

        function getSelectedRange() {
            return { from: editor.getCursor(true), to: editor.getCursor(false) };
        }

        function autoFormatSelection() {
            var range = getSelectedRange();
            editor.autoFormatRange(range.from, range.to);
        }

        function commentSelection(isComment) {
            var range = getSelectedRange();
            editor.commentRange(isComment, range.from, range.to);
        }
    </script>
}
